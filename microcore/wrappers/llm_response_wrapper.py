from ..json_parsing import parse_json
from ..utils import ExtendedString, ConvertableToMessage
from ..message_types import Role, AssistantMsg


class LLMResponse(ExtendedString, ConvertableToMessage):
    """
    Response from the Large Language Model.

    If treated as a string, it returns the text generated by the LLM.

    Also, it contains all fields returned by the API accessible as an attributes.

    See fields returned by the OpenAI:

    - https://platform.openai.com/docs/api-reference/completions/object
    - https://platform.openai.com/docs/api-reference/chat/object
    """

    def __new__(cls, string: str, attrs: dict = None):
        obj = ExtendedString.__new__(cls, string, attrs)
        # Same fields like in Msg
        setattr(obj, "role", Role.ASSISTANT)
        setattr(obj, "content", str(string))
        return obj

    def parse_json(
        self, raise_errors: bool = True, required_fields: list[str] = None
    ) -> list | dict | float | int | str:
        return parse_json(self.content, raise_errors, required_fields)

    def as_message(self) -> AssistantMsg:
        return self.as_assistant
